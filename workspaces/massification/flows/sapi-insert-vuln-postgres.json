{
    "id": "sapi-insert-vuln-postgres",
    "name": "Insert vulnerabilities",
    "pipeline": [
        {
            "action": "start",
            "data": {},
            "id": "start",
            "next_action": "flow_var_vulnerabilities"
        },
        {
            "id": "flow_var_vulnerabilities",
            "action": "flow_var",
            "data": {
                "vulnerabilities": "${workspace.vulnerabilities}"
            },
            "next_action": "sql_db_conn_vulnerabilities"
        },
        {
            "id": "sql_db_conn_vulnerabilities",
            "action": "sql_db",
            "data": {
                "conn_name": "socportal"
            },
            "next_action": "flow_var_db"
        },
        {
            "id": "flow_var_db",
            "action": "flow_var",
            "data": {
                "session": "${response.db.session}",
                "vuln_model": "${function.models.Vulnerabilities}",
                "vuln_service": "${function.services.Vulnerabilities}"
            },
            "next_action": "check_var_vulnerabilities"
        },
        {
            "id": "check_var_vulnerabilities",
            "action": "switch",
            "data": {
                "conditions": [
                    {
                        "operator": "greater_than",
                        "first_expression": "${len(flow.vulnerabilities)}",
                        "second_expression": "${0}",
                        "next_action": "insert_vulnerabilities"
                    }
                ],
                "next_action_else": "response_success"
            },
            "next_action": "${pipeline.next_action}"
        },
        {
            "id": "insert_vulnerabilities",
            "action": "run",
            "data": {
                "inserted": "${flow.vuln_service(flow.session).get_or_create(flow.vuln_model,flow.vulnerabilities[0]._id)}"
            },
            "next_action": "flow_var_vulnerabilities_update"
        },
        {
            "id": "flow_var_vulnerabilities_update",
            "action": "flow_var",
            "data": {
                "vulnerabilities": "${function.util.remove_from_dict(flow.vulnerabilities)}"
            },
            "next_action": "check_var_vulnerabilities"
        },
        {
            "id": "response_success",
            "action": "response",
            "data": {
                "data": {
                    "data": "${response.data}"
                }
            },
            "next_action": null
        }
    ]
}